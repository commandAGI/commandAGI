 [project]
name = "commandAGI2"
version = "0.0.1"
description = ""
authors = [
    { name = "commandAGI", email = "hello@commandagi.com" },
    { name = "Jacob Valdez", email = "jacob@commandagi.com" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12,<4"
dependencies = [
    "rich~=13.9",
    "pydantic~=2.10",
    "typer~=0.15",
    "boto3~=1.37",
    "azure-identity~=1.20",
    "azure-mgmt-compute~=34.0",
    "azure-mgmt-containerinstance~=10.1",
    "google-cloud-compute~=1.26",
    "google-cloud-container~=2.56",
    "google-cloud-run~=0.10",
    "docker~=7.1",
    "kubernetes~=32.0",
    "pynput~=1.7",
    "pyautogui~=0.9",
    "mss~=10.0",
    "pillow~=11.1",
    "platformdirs~=4.3",
    "pytesseract~=0.3",
    "fastapi~=0.115",
    "uvicorn~=0.34",
    "openai~=1.64",
]

[project.optional-dependencies]
# Base extras
local = [
    "pynput~=1.7",
    "pyautogui~=0.9",
    "mss~=10.0",
    "uiautomation>=2.0.20,<3.0.0; platform_system == 'Windows'",
    "pyax; platform_system == 'Darwin'",
]

vnc = ["vncdotool~=1.2"]
docker = ["docker~=7.1"]
kubernetes = ["kubernetes~=32.0"]
scrapybara = [
    "scrapybara~=2.2",
    "pillow~=11.1",
]
langchain = [
    "langchain-core~=0.3",
    "langchain~=0.3",
    "langchain-openai~=0.3",
    "langchain-huggingface~=0.1",
]
pig = ["pig-python~=0.1"]
pytesseract = ["pytesseract~=0.3"]
gymnasium = ["gymnasium~=1.0", "numpy~=2.2", "pillow~=11.1", "matplotlib~=3.10"]
jupyter = [
    "nbformat~=5.10",
    "nbclient>=0.10.2,<0.11.0",
    "jupyter-client~=8.6",
    "nbconvert~=7.16",
]

# Base daemon client dependencies
daemon-client-base = [
    "requests~=2.32",
    "pillow~=11.1",
]

# Provider-specific daemon clients that build on the base
daemon-client-aws = [
    "boto3~=1.37",
    "commandAGI2[daemon-client-base]",
]
daemon-client-azure = [
    "azure-mgmt-containerinstance~=10.1",
    "azure-identity~=1.20",
    "commandAGI2[daemon-client-base]",
]
daemon-client-gcp = [
    "google-cloud-container~=2.56",
    "commandAGI2[daemon-client-base]",
]
daemon-client-docker = [
    "docker~=7.1",
    "commandAGI2[daemon-client-base]",
]
daemon-client-kubernetes = [
    "kubernetes~=32.0",
    "commandAGI2[daemon-client-base]",
]

# Composite of all daemon clients
daemon-client-all = [
    "commandAGI2[daemon-client-aws,daemon-client-azure,daemon-client-gcp,daemon-client-docker,daemon-client-kubernetes]",
]

# Daemon host dependencies
daemon-host = [
    "fastapi~=0.115",
    "uvicorn~=0.34",
    "mcp>=1.3.0,<2.0.0",
    "commandAGI2[local]",  # Reuse the local extra
]

# Development dependencies
dev = [
    "mkdocs-autorefs~=1.4",
    "mkdocs~=1.6",
    "mkdocs-material~=9.6",
    "mkdocstrings[python]~=0.28",
    "mkdocs-jupyter~=0.25",
    "pytest~=8.3",
    "pytest-cov~=6.0",
    "black~=25.1",
    "isort~=6.0",
    "ruff~=0.9",
    "pillow~=11.1",
    "mdformat>=0.7.22",
    "openapi-python-client>=0.23.1",
]

# Documentation dependencies
docs = [
    "mkdocs-autorefs~=1.4",
    "mkdocs~=1.6",
    "mkdocs-material~=9.6",
    "mkdocstrings[python]~=0.28",
    "mkdocs-jupyter~=0.25",
    "mkdocs-macros-plugin~=1.0",
    "mkdocs-awesome-pages-plugin>=2.10.1",
]

# You can also create an "all" extra if needed
all = [
    "commandAGI2[local,vnc,docker,kubernetes,scrapybara,langchain,pig,pytesseract,gymnasium,jupyter,daemon-client-all,daemon-host,dev,docs]",
]

[project.urls]
Homepage = "https://commandagi.com"
Documentation = "https://commandagi.com/developers/commandAGI2"
PyPI = "https://pypi.org/project/commandAGI2/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["commandAGI2"]

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "black>=25.1.0",
]
